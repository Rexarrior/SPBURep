use cyberlife;

# worlds------------------------------------------------------------------
insert into worlds 
	(worlds.world_id, worlds.map, worlds.name)
values 
	(1, multipoint(point(0.0, 0.0), point(1000.0, 1000.0)), 'TestWorld1');
	 
	 
# world_lifeform_sets-----------------------------------------------------
insert into world_lifeform_sets
set
	 `lifeform_set_id`=1,
	`name` = 'alive',
	`world_id_fk` = 1;

insert into world_lifeform_sets
set
	 `lifeform_set_id`= 2,
	`name` = 'organic',
	`world_id_fk` = 1;
    
# states-----------------------------------------------------------------    
insert into states
set 
	`state_id` = 1,
	`state_type` = 'bool',
    `name` = 'isAlive';

insert into states
set 
	`state_id` = 2,
	`state_type` = 'double',
    `name` = 'energy';

insert into states
set 
	`state_id` = 3,
	`state_type` = 'bool',
    `name` = 'canReproduce';

insert into states
set 
	`state_id` = 4,
	`state_type` = 'bool',
    `name` = 'isEnergyOverflow';

# phenomens-----------------------------------------------------------------
insert into phenomens
set
	`phenomen_id` = 1,
	`effect` = 4,
	`name` = 'sun',
	`state_id_fk` = 2;


insert into phenomens
set
	`phenomen_id` = 2,
	`effect` = 2,
	`name` = 'minerals',
	`state_id_fk` = 2;

# world_phenomens-------------------------------------------------------------------
insert into world_phenomens
set 
  `area` = multipoint(point(0,0), point(1000, 500)),
  `gradient_factor`= 0,
  `power_factor` = 1,
  `phenomen_id_fk` = 1,
  `world_id_fk`  = 1,
  `status`  = b'1',
  `period` = 0;

insert into world_phenomens
set 
  `area` = multipoint(point(0, 700), point(1000, 1000)),
  `gradient_factor`= 1,
  `power_factor` = 1,
  `phenomen_id_fk` = 2,
  `world_id_fk`  = 1,
  `status`  = b'1',
  `period` = 100;


# lifeforms--------------------------------------------------------------------------
insert into lifeforms
(lifeforms.genom, lifeforms.point, lifeforms.world_id_fk, lifeforms.lifeform_set_id_fk, lifeforms.lifeform_id)
values
	(
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 1
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 2
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 3
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 4
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 5
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 6
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 7
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 8
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 9
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 10
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 11
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 12
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 13
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 14
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 15
	),(
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 16
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 17
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 18
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 19
	),
    (
	' 6,6,4,5,5,6,3,3,6,5,2,3,6,4,4,4,3,4,2,2,5,3,4,4,3,5,3,4,4,6,3,2,4,2,5,5,3,6,2,6,
	6,4,6,2,5,4,2,4,2,2,4,5,2,3,6,4,4,2,4,2,5,6,5,6', Point(-1, -1), 1, 1, 20
	);
    
# lifeform_states----------------------------------------------------------------------
insert into lifeform_states
	(lifeform_states.value, lifeform_id_fk, state_id_fk)
values
	(1, 1, 1), (200, 1, 2), (0, 1, 3), 
    (1, 2, 1), (200, 2, 2), (0, 2, 3), 
    (1, 3, 1), (200, 3, 2), (0, 3, 3), 
    (1, 4, 1), (200, 4, 2), (0, 4, 3), 
    (1, 5, 1), (200, 5, 2), (0, 5, 3), 
    (1, 6, 1), (200, 6, 2), (0, 6, 3), 
    (1, 7, 1), (200, 7, 2), (0, 7, 3), 
    (1, 8, 1), (200, 8, 2), (0, 8, 3), 
    (1, 9, 1), (200, 9, 2), (0, 9, 3), 
    (1, 10, 1), (200, 10, 2), (0, 10, 3), 
    (1, 11, 1), (200, 11, 2), (0, 11, 3), 
    (1, 12, 1), (200, 12, 2), (0, 12, 3), 
    (1, 13, 1), (200, 13, 2), (0, 13, 3), 
    (1, 14, 1), (200, 14, 2), (0, 14, 3), 
    (1, 15, 1), (200, 15, 2), (0, 15, 3), 
    (1, 16, 1), (200, 16, 2), (0, 16, 3), 
    (1, 17, 1), (200, 17, 2), (0, 17, 3), 
    (1, 18, 1), (200, 18, 2), (0, 18, 3), 
    (1, 19, 1), (200, 19, 2), (0, 19, 3), 
    (1, 20, 1), (200, 20, 2), (0, 20, 3); 
    
    